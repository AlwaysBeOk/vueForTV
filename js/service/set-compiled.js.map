{"version":3,"sources":["set.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;IAAa,G,WAAA,G;;AAEb;;;;;;;;AAQA,iBAAa,OAAb,EAAqB,SAArB,EAAgC;AAAA;;AAC5B,cAAM,SAAN,CAAgB,MAAhB,GAAyB,UAAU,KAAV,EAAiB,IAAjB,EAAuB;AAC5C,iBAAK,MAAL,CAAY,KAAZ,EAAmB,CAAnB,EAAsB,IAAtB;AACH,SAFD;AAGA,aAAK,QAAL,GAAc,SAAd;AACA,aAAK,MAAL,GAAY,OAAZ;AACA;;;AAGA,aAAK,GAAL,GAAS,EAAT;AACA;;;AAGA,aAAK,IAAL,GAAU,EAAV;AACH;;;;;;AAEG;;;;;4BAKI,I,EAAK;AACL,gBAAI,QAAM,KAAK,KAAK,MAAV,CAAV;AACA,gBAAG,CAAC,KAAJ,EAAU;AACF;AACP;AACD,gBAAI,QAAM,KAAK,GAAL,CAAS,OAAT,CAAiB,KAAjB,CAAV;AACA,gBAAG,SAAO,CAAC,CAAX,EAAa;;AAET,qBAAK,GAAL,CAAS,IAAT,CAAc,KAAd;AACH,aAHD,MAGK;AACD,uBAAO,KAAP;AACH;AACD,gBAAI,KAAG,KAAK,IAAL,CAAU,MAAjB;AACA,gBAAG,MAAI,CAAP,EAAS;AACL,qBAAK,IAAL,CAAU,CAAV,IAAa,IAAb;AACA,uBAAO,IAAP;AACH;;AAED,iBAAI,IAAI,IAAE,EAAV,EAAa,IAAE,CAAf,EAAiB,GAAjB,EAAqB;AACjB,oBAAI,QAAM,IAAE,CAAZ;AACA,oBAAI,KAAK,IAAL,CAAU,KAAV,CAAD,CAAmB,KAAK,QAAxB,IAAkC,KAAK,KAAK,QAAV,CAAlC,GAAsD,CAAzD,EAA2D;AACvD,yBAAK,IAAL,CAAU,MAAV,CAAiB,CAAjB,EAAmB,IAAnB;AACA,2BAAO,IAAP;AACH;AACJ;AACD,iBAAK,IAAL,CAAU,MAAV,CAAiB,CAAjB,EAAmB,IAAnB;AACA,mBAAO,IAAP;AACH;AACD;;;;;;;+BAIM;AACF,mBAAO,KAAK,IAAL,CAAU,MAAjB;AACH;AACD;;;;;;;kCAIS;AACL,mBAAQ,KAAK,IAAb;AACH;;;;;AAEJ","file":"set-compiled.js","sourcesContent":["export class set{\r\n\r\n/**\r\n * 弹出框工具类,使用方法查看例子<a href='../set/eg/index.html'> set的使用</a>\r\n * @param {String} _sortAttr 排序字段\r\n * @param {String} _unAttr  唯一字段\r\n * @constructor\r\n * @alias module:cntv.set\r\n *\r\n */\r\nconstructor (_unAttr,_sortAttr) {\r\n    Array.prototype.insert = function (index, item) {\r\n        this.splice(index, 0, item);\r\n    };\r\n    this.sortAttr=_sortAttr;\r\n    this.unAttr=_unAttr;\r\n    /**\r\n     *存储唯一字段的数组\r\n     */\r\n    this.ids=[];\r\n    /**\r\n     * 存储对象数组\r\n     */\r\n    this.objs=[];\r\n};\r\n\r\n    /**\r\n     * 将对象存入数组中\r\n     * @param {Object} _obj  要存入的对象\r\n     * @return true 插入成功   false插入失败\r\n     */\r\n    put(_obj){\r\n        var newId=_obj[this.unAttr];\r\n        if(!newId){\r\n                return ;\r\n        }\r\n        var index=this.ids.indexOf(newId);\r\n        if(index==-1){\r\n\r\n            this.ids.push(newId);\r\n        }else{\r\n            return false;\r\n        }\r\n        var le=this.objs.length;\r\n        if(le==0){\r\n            this.objs[0]=_obj;\r\n            return true;\r\n        }\r\n\r\n        for(var i=le;i>0;i--){\r\n            var index=i-1;\r\n            if((this.objs[index])[this.sortAttr]-_obj[this.sortAttr]>0){\r\n                this.objs.insert(i,_obj);\r\n                return true;\r\n            }\r\n        }\r\n        this.objs.insert(0,_obj);\r\n        return true;\r\n    }\r\n    /**\r\n     * 返回数组的长度\r\n     * return {Number}\r\n     */\r\n    size(){\r\n        return this.objs.length;\r\n    }\r\n    /**\r\n     * 返回数组\r\n     * return {Array}\r\n     */\r\n    toArray(){\r\n        return  this.objs;\r\n    }\r\n\r\n};"]}